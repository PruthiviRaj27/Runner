name: Kotlin CI
on: [push]
jobs:
  build1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

    steps:
      - id: set-matrix
        run: echo "matrix={\"app\":[\"Job 1\",\"Job 2\",\"Job 3\",\"Job 4\",\"Job 5\"]}" >> $GITHUB_OUTPUT

  build2:
    needs: build1
    runs-on: ubuntu-latest
    continue-on-error: true

    strategy:
      matrix: ${{ fromJSON(needs.build1.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: 11

      - name: Compile and run Kotlin file
        run: |
          status="${{ matrix.app }}"
          echo "Job ${{ matrix.app }} status: $status"
          kotlinc src/main/kotlin/Main.kt -include-runtime -d Main.jar
          java -jar Main.jar

      - name: Set status based on job result
        id: set-status
        if: steps.job-result.outcome == 'success'
        run: echo "::set-output name=status::completed"
      - run: echo "::set-output name=status::failed"
        if: steps.job-result.outcome == 'failure'

    outputs:
      status: ${{ steps.set-status.outputs.status }}

  build3:
    needs: build2
    runs-on: ubuntu-latest
    steps:
      - name: Print build results
        run: |
          success=$(jobs=($(echo "$MATRIX" | jq -r '.app[]')); echo "${#jobs[@]}")
          failure=$(jobs=($(echo "$MATRIX" | jq -r 'select(. != "completed") | .[]')); echo "${#jobs[@]}")
          echo "Total successful jobs: $success"
          echo "Total failed jobs: $failure"