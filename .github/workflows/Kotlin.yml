name: Kotlin CI
on: [push]
jobs:
  build1:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
      success_array: ${{ steps.step1.outputs.success_array }}
      failure_array: ${{ steps.step1.outputs.failure_array }}

    steps:
      - id: set-matrix
        run: | 
          echo "matrix={\"app\":[\"Job 1\",\"Job 2\",\"Job 3\",\"Job 4\",\"Job 5\"]}" >> $GITHUB_OUTPUT
          success_array=("Success1" "Success2")
          failure_array=("Failure1" "Failure2")
          echo "::set-output name=success_array::${success_array[*]}"
          echo "::set-output name=failure_array::${failure_array[*]}"

  build2:
    needs: build1
    runs-on: ubuntu-latest
    continue-on-error: true

    strategy:
      matrix: ${{ fromJSON(needs.build1.outputs.matrix) }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: "corretto"
          java-version: 11

      - name: Compile and run Kotlin file
        run: |
          kotlinc src/main/kotlin/Main.kt -include-runtime -d Main.jar
          java -jar Main.jar
          # Use ${{ matrix.job_name }} to access the current job name
          if [condition]; then
            echo ${{ matrix.job_name }} >> success.txt
          else
            echo ${{ matrix.job_name }} >> failure.txt
          fi

#      - name: The job has failed
#        if: ${{ always() && failure() }}
#        run: echo "The job has failed"

  build3:
    needs: [build1, build2]
    runs-on: ubuntu-latest
    steps:
      - name: Count successes and failures
        run: |
          success_array=$(cat success.txt)
          failure_array=$(cat failure.txt)
          echo "Success Array: $success_array"
          echo "Failure Array: $failure_array"